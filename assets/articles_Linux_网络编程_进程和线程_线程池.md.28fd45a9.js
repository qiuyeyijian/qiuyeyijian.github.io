import{_ as s,v as n,b as a,R as l}from"./chunks/framework.53249f15.js";const p="/assets/R9c00030b842edb1ae3d6a2b286e53916.8a85e40e.png",u=JSON.parse('{"title":"线程池","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Linux/网络编程/进程和线程/线程池.md","filePath":"articles/Linux/网络编程/进程和线程/线程池.md"}'),o={name:"articles/Linux/网络编程/进程和线程/线程池.md"},t=l('<h1 id="线程池" tabindex="-1">线程池 <a class="header-anchor" href="#线程池" aria-label="Permalink to &quot;线程池&quot;">​</a></h1><h2 id="线程池原理" tabindex="-1">线程池原理 <a class="header-anchor" href="#线程池原理" aria-label="Permalink to &quot;线程池原理&quot;">​</a></h2><p>我们使用线程的时候就去创建一个线程，这样实现起来非常简便，但是就会有一个问题：如果并发的线程数量很多，并且每个线程都是执行一个时间很短的任务就结束了，这样频繁创建线程就会大大降低系统的效率，因为频繁创建线程和销毁线程需要时间。</p><p>那么有没有一种办法使得线程可以复用，就是执行完一个任务，并不被销毁，而是可以继续执行其他的任务呢？</p><p>线程池是一种多线程处理形式，处理过程中将任务添加到队列，然后在创建线程后自动启动这些任务。线程池线程都是后台线程。每个线程都使用默认的堆栈大小，以默认的优先级运行，并处于多线程单元中。如果某个线程在托管代码中空闲（如正在等待某个事件）, 则线程池将插入另一个辅助线程来使所有处理器保持繁忙。如果所有线程池线程都始终保持繁忙，但队列中包含挂起的工作，则线程池将在一段时间后创建另一个辅助线程但线程的数目永远不会超过最大值。超过最大值的线程可以排队，但他们要等到其他线程完成后才启动。</p><p>线程池的组成主要分为 3 个部分，这三部分配合工作就可以得到一个完整的线程池：</p><blockquote><p><strong>1、任务队列，存储需要处理的任务，由工作的线程来处理这些任务</strong></p></blockquote><ul><li>通过线程池提供的 API 函数，将一个待处理的任务添加到任务队列，或者从任务队列中删除</li><li>已处理的任务会被从任务队列中删除</li><li>线程池的使用者，也就是调用线程池函数往任务队列中添加任务的线程就是生产者线程</li></ul><blockquote><p><strong>2、工作的线程（任务队列任务的消费者） ，N个</strong></p></blockquote><p>线程池中维护了一定数量的工作线程，他们的作用是是不停的读任务队列，从里边取出任务并处理</p><p>工作的线程相当于是任务队列的消费者角色，</p><p>如果任务队列为空，工作的线程将会被阻塞 (使用条件变量 / 信号量阻塞)</p><p>如果阻塞之后有了新的任务，由生产者将阻塞解除，工作线程开始工作</p><blockquote><p><strong>3、管理者线程（不处理任务队列中的任务），1个</strong></p></blockquote><p>它的任务是周期性的对任务队列中的任务数量以及处于忙状态的工作线程个数进行检测</p><ul><li>当任务过多的时候，可以适当的创建一些新的工作线程</li><li>当任务过少的时候，可以适当的销毁一些工作的线程</li></ul><p><img src="'+p+`" alt="查看源图像"></p><h2 id="c语言实现" tabindex="-1">C语言实现 <a class="header-anchor" href="#c语言实现" aria-label="Permalink to &quot;C语言实现&quot;">​</a></h2><h3 id="任务队列" tabindex="-1">任务队列 <a class="header-anchor" href="#任务队列" aria-label="Permalink to &quot;任务队列&quot;">​</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 任务结构体</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;">function</span><span style="color:#89DDFF;">)(</span><span style="color:#C792EA;">void*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="线程池的定义" tabindex="-1">线程池的定义 <a class="header-anchor" href="#线程池的定义" aria-label="Permalink to &quot;线程池的定义&quot;">​</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 线程池结构体</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 任务队列</span></span>
<span class="line"><span style="color:#F07178;">  Task</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> taskQ</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> queueCapacity</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // 容量</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> queueSize</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">      // 当前任务个数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> queueFront</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">     // 队头 -&gt; 取数据</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> queueRear</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">      // 队尾 -&gt; 放数据</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#F07178;"> managerID</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">        // 管理者线程ID</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> threadIDs</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">       // 工作的线程ID</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> minNum</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">                 // 最小线程数量</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> maxNum</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">                 // 最大线程数量</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> busyNum</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">                // 忙的线程的个数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> liveNum</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">                // 存活的线程的个数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> exitNum</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">                // 要销毁的线程个数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_mutex_t</span><span style="color:#F07178;"> mutexPool</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // 锁整个的线程池</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_mutex_t</span><span style="color:#F07178;"> mutexBusy</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // 锁busyNum变量</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_cond_t</span><span style="color:#F07178;"> notFull</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">     // 任务队列是不是满了</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_cond_t</span><span style="color:#F07178;"> notEmpty</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">    // 任务队列是不是空了</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> shutdown</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // 是不是要销毁线程池, 销毁为1, 不销毁为0</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h3 id="头文件声明" tabindex="-1">头文件声明 <a class="header-anchor" href="#头文件声明" aria-label="Permalink to &quot;头文件声明&quot;">​</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#ifndef</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_THREADPOOL_H</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">_THREADPOOL_H</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 创建线程池并初始化</span></span>
<span class="line"><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolCreate</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">min</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">max</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">queueSize</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 销毁线程池</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolDestroy</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 给线程池添加任务</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolAdd</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">)(</span><span style="color:#C792EA;">void*</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 获取线程池中工作的线程的个数</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolBusyNum</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 获取线程池中活着的线程的个数</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolAliveNum</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//////////////////////</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 工作的线程(消费者线程)任务函数</span></span>
<span class="line"><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">worker</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 管理者线程任务函数</span></span>
<span class="line"><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">manager</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 单个线程退出</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadExit</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#endif</span><span style="color:#676E95;font-style:italic;">  // _THREADPOOL_H</span></span></code></pre></div><h3 id="源文件定义" tabindex="-1">源文件定义 <a class="header-anchor" href="#源文件定义" aria-label="Permalink to &quot;源文件定义&quot;">​</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolCreate</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">min</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">max</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">queueSize</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ThreadPool</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> pool </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ThreadPool</span><span style="color:#89DDFF;">*)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#A6ACCD;">ThreadPool</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">pool </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">malloc threadpool fail...</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#89DDFF;">*)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> max</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">malloc threadIDs fail...</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">memset</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> max</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">minNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> min</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">maxNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> max</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">busyNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">liveNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> min</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // 和最小个数相等</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">exitNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pthread_mutex_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">pthread_mutex_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">pthread_cond_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notEmpty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">pthread_cond_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notFull</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mutex or condition init fail...</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 任务队列</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">taskQ</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">Task</span><span style="color:#89DDFF;">*)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">Task</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> queueSize</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueCapacity</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> queueSize</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueSize</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueFront</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueRear</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">shutdown</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 创建线程</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_create</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">managerID</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#F07178;"> manager</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> min</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_create</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">],</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#F07178;"> worker</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> pool</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 释放资源</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">taskQ</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">taskQ</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolDestroy</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 关闭线程池</span></span>
<span class="line"><span style="color:#A6ACCD;">  pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">shutdown </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 阻塞回收管理者线程</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_join</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">managerID</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 唤醒阻塞的消费者线程</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">liveNum</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_cond_signal</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notEmpty</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 释放堆内存</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">taskQ</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">taskQ</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_destroy</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_destroy</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_cond_destroy</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notEmpty</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_cond_destroy</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notFull</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  pool </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolAdd</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">)(</span><span style="color:#C792EA;">void*</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueSize </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueCapacity </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">shutdown</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 阻塞生产者线程</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_cond_wait</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notFull</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">shutdown</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 添加任务</span></span>
<span class="line"><span style="color:#A6ACCD;">  pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">taskQ</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueRear</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">function </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> func</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">taskQ</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueRear</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">arg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueRear </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueRear </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueCapacity</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueSize</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_cond_signal</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notEmpty</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolBusyNum</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> busyNum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">busyNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> busyNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolAliveNum</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> aliveNum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">liveNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> aliveNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">worker</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ThreadPool</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> pool </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ThreadPool</span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 当前任务队列是否为空</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueSize</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">shutdown</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 阻塞工作线程</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_cond_wait</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notEmpty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 判断是不是要销毁线程</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">exitNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">exitNum</span><span style="color:#89DDFF;">--;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">liveNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">minNum</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">liveNum</span><span style="color:#89DDFF;">--;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">threadExit</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 判断线程池是否被关闭了</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">shutdown</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">threadExit</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 从任务队列中取出一个任务</span></span>
<span class="line"><span style="color:#F07178;">    Task task</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">taskQ</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueFront</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">function</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">taskQ</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueFront</span><span style="color:#89DDFF;">].</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 移动头结点</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueFront</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueFront</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueCapacity</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueSize</span><span style="color:#89DDFF;">--;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 解锁</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_cond_signal</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notFull</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">thread %ld start working...</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">pthread_self</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">busyNum</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">thread %ld end working...</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">pthread_self</span><span style="color:#89DDFF;">());</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">busyNum</span><span style="color:#89DDFF;">--;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">manager</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ThreadPool</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> pool </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ThreadPool</span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">shutdown</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 每隔3s检测一次</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 取出线程池中任务的数量和当前线程的数量</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> queueSize </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">queueSize</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">liveNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 取出忙的线程的数量</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> busyNum </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">busyNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexBusy</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 添加线程</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 任务的个数&gt;存活的线程个数 &amp;&amp; 存活的线程数&lt;最大线程数</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">queueSize </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">maxNum</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> counter </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">           i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">maxNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> counter </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> NUMBER </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">liveNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">maxNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">pthread_create</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">],</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#F07178;"> worker</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">          counter</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">liveNum</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 销毁线程</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 忙的线程*2 &lt; 存活的线程数 &amp;&amp; 存活的线程&gt;最小线程数</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">busyNum </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">minNum</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">exitNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> NUMBER</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">mutexPool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 让工作的线程自杀</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> NUMBER</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">pthread_cond_signal</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">notEmpty</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadExit</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pool</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#A6ACCD;"> tid </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pthread_self</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">maxNum</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> tid</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">threadExit() called, %ld exiting...</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> tid</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_exit</span><span style="color:#89DDFF;">(NULL);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="测试代码" tabindex="-1">测试代码 <a class="header-anchor" href="#测试代码" aria-label="Permalink to &quot;测试代码&quot;">​</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">taskFunc</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">*)</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">thread %ld is working, number = %d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pthread_self</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 创建线程池</span></span>
<span class="line"><span style="color:#A6ACCD;">  ThreadPool</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> pool </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">threadPoolCreate</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">*)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">num </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">threadPoolAdd</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">pool</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> taskFunc</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> num</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">threadPoolDestroy</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="c-语言实现" tabindex="-1">C++语言实现 <a class="header-anchor" href="#c-语言实现" aria-label="Permalink to &quot;C++语言实现&quot;">​</a></h2><h3 id="任务队列-1" tabindex="-1">任务队列 <a class="header-anchor" href="#任务队列-1" aria-label="Permalink to &quot;任务队列&quot;">​</a></h3><p>其中 Task 是任务类，里边有两个成员，分别是两个指针 void(<em>)(void</em>) 和 void*</p><p>另外一个类 TaskQueue 是任务队列，提供了添加任务、取出任务、存储任务、获取任务个数、线程同步的功能。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 定义任务结构体</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">callback</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(*)(</span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*);</span></span>
<span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Task</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">Task</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    function </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"><span style="color:#F07178;">    arg </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">Task</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">callback</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">f</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    function </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> f</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">this-&gt;</span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  callback function</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 任务队列</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">TaskQueue</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">TaskQueue</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">~TaskQueue</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 添加任务</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">addTask</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Task</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">addTask</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">callback</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 取出一个任务</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Task</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">takeTask</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 获取当前队列中任务个数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">inline</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">taskNumber</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">m_queue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">();</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_mutex_t</span><span style="color:#F07178;"> m_mutex</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">   // 互斥锁</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">queue</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">Task</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> m_queue</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">  // 任务队列</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">TaskQueue</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">TaskQueue</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">pthread_mutex_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">m_mutex</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL);</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">TaskQueue</span><span style="color:#89DDFF;">::~</span><span style="color:#82AAFF;">TaskQueue</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">pthread_mutex_destroy</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">m_mutex</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TaskQueue</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">addTask</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Task</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_mutex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  m_queue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_mutex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TaskQueue</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">addTask</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">callback</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_mutex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  Task task</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">function </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> func</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">arg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  m_queue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_mutex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TaskQueue</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">takeTask</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  Task t</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_mutex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m_queue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">size</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    t </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">m_queue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">front</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">m_queue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">pop</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_mutex</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> t</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="线程池-1" tabindex="-1">线程池 <a class="header-anchor" href="#线程池-1" aria-label="Permalink to &quot;线程池&quot;">​</a></h3><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">ThreadPool</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">min</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">max</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">~ThreadPool</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 添加任务</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">addTask</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Task</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 获取忙线程的个数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getBusyNumber</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 获取活着的线程个数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">getAliveNumber</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 工作的线程的任务函数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">worker</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 管理者线程的任务函数</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">manager</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">threadExit</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_mutex_t</span><span style="color:#F07178;"> m_lock</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_cond_t</span><span style="color:#F07178;"> m_notEmpty</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> m_threadIDs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#F07178;"> m_managerID</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  TaskQueue</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> m_taskQ</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> m_minNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> m_maxNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> m_busyNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> m_aliveNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> m_exitNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> m_shutdown </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">ThreadPool</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> minNum</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> maxNum</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 实例化任务队列</span></span>
<span class="line"><span style="color:#F07178;">  m_taskQ </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> TaskQueue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">do</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 初始化线程池</span></span>
<span class="line"><span style="color:#F07178;">    m_minNum </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> minNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    m_maxNum </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> maxNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    m_busyNum </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    m_aliveNum </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> minNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 根据线程的最大上限给线程数组分配内存</span></span>
<span class="line"><span style="color:#F07178;">    m_threadIDs </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">maxNum</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">m_threadIDs </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">malloc thread_t[] 失败....</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 初始化</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">memset</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">m_threadIDs</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> maxNum</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 初始化互斥锁,条件变量</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pthread_mutex_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">m_lock</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">pthread_cond_init</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">m_notEmpty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">init mutex or condition fail...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /////////////////// 创建线程 //////////////////</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 根据最小线程个数, 创建线程</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> minNum</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_create</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">],</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#F07178;"> worker</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this);</span></span>
<span class="line"><span style="color:#F07178;">      cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">创建子线程, ID: </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">to_string</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m_threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">])</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 创建管理者线程, 1个</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_create</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">m_managerID</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#F07178;"> manager</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#89DDFF;">::~</span><span style="color:#82AAFF;">ThreadPool</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  m_shutdown </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 销毁管理者线程</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">pthread_join</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">m_managerID</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 唤醒所有消费者线程</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> m_aliveNum</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_cond_signal</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">m_notEmpty</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">m_taskQ</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">delete</span><span style="color:#F07178;"> m_taskQ</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">m_threadIDs</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">delete[]</span><span style="color:#F07178;"> m_threadIDs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">pthread_mutex_destroy</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">pthread_cond_destroy</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#F07178;">m_notEmpty</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">addTask</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Task</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">task</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m_shutdown</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 添加任务，不需要加锁，任务队列中有锁</span></span>
<span class="line"><span style="color:#A6ACCD;">  m_taskQ</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">addTask</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 唤醒工作的线程</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_cond_signal</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_notEmpty</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getAliveNumber</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> threadNum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  threadNum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> m_aliveNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> threadNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">getBusyNumber</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> busyNum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  busyNum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> m_busyNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> busyNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 工作线程任务函数</span></span>
<span class="line"><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">worker</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ThreadPool</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> pool </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">static_cast&lt;</span><span style="color:#A6ACCD;">ThreadPool</span><span style="color:#89DDFF;">*&gt;(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 一直不停的工作</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(true)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 访问任务队列(共享资源)加锁</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 判断任务队列是否为空, 如果为空工作线程阻塞</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_taskQ</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">taskNumber</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_shutdown</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">thread </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">to_string</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pthread_self</span><span style="color:#89DDFF;">())</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> waiting...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 阻塞线程</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_cond_wait</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_notEmpty</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 解除阻塞之后, 判断是否要销毁线程</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_exitNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_exitNum</span><span style="color:#89DDFF;">--;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_aliveNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_minNum</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_aliveNum</span><span style="color:#89DDFF;">--;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">threadExit</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 判断线程池是否被关闭了</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_shutdown</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">threadExit</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 从任务队列中取出一个任务</span></span>
<span class="line"><span style="color:#F07178;">    Task task </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_taskQ</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">takeTask</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 工作的线程+1</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_busyNum</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 线程池解锁</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 执行任务</span></span>
<span class="line"><span style="color:#F07178;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">thread </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">to_string</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pthread_self</span><span style="color:#89DDFF;">())</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> start working...</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F07178;">         </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">delete</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">task</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">arg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 任务处理结束</span></span>
<span class="line"><span style="color:#F07178;">    cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">thread </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">to_string</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pthread_self</span><span style="color:#89DDFF;">())</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> end working...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_busyNum</span><span style="color:#89DDFF;">--;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 管理者线程任务函数</span></span>
<span class="line"><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">manager</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">void*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">arg</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ThreadPool</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> pool </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">static_cast&lt;</span><span style="color:#A6ACCD;">ThreadPool</span><span style="color:#89DDFF;">*&gt;(</span><span style="color:#A6ACCD;">arg</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 如果线程池没有关闭, 就一直检测</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(!</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_shutdown</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 每隔5s检测一次</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 取出线程池中的任务数和线程数量</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    //  取出工作的线程池数量</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> queueSize </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_taskQ</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">taskNumber</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_aliveNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> busyNum </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_busyNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 创建线程</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> NUMBER </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 当前任务个数&gt;存活的线程数 &amp;&amp; 存活的线程数&lt;最大线程个数</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">queueSize </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_maxNum</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 线程池加锁</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_maxNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> num </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> NUMBER </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">                      </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_aliveNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_maxNum</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#82AAFF;">pthread_create</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">],</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL,</span><span style="color:#F07178;"> worker</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> pool</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">          num</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_aliveNum</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 销毁多余的线程</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 忙线程*2 &lt; 存活的线程数目 &amp;&amp; 存活的线程数 &gt; 最小线程数量</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">busyNum </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> liveNum </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_minNum</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_lock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_exitNum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> NUMBER</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">pthread_mutex_unlock</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_lock</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> NUMBER</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">pthread_cond_signal</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">pool</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">m_notEmpty</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 线程退出</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ThreadPool</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">threadExit</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">pthread_t</span><span style="color:#A6ACCD;"> tid </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">pthread_self</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> m_maxNum</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">m_threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> tid</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      cout </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">threadExit() function: thread </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">to_string</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">pthread_self</span><span style="color:#89DDFF;">())</span></span>
<span class="line"><span style="color:#F07178;">           </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> exiting...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;&lt;</span><span style="color:#F07178;"> endl</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">m_threadIDs</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">pthread_exit</span><span style="color:#89DDFF;">(NULL);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,35),e=[t];function c(F,r,y,D,A,C){return n(),a("div",null,e)}const m=s(o,[["render",c]]);export{u as __pageData,m as default};
