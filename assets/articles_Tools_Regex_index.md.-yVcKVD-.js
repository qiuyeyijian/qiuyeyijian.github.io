import{_ as s,c as i,o as a,V as e}from"./chunks/framework.fZt_wkQb.js";const E=JSON.parse('{"title":"Regex","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Tools/Regex/index.md","filePath":"articles/Tools/Regex/index.md"}'),t={name:"articles/Tools/Regex/index.md"},n=e(`<h1 id="regex" tabindex="-1">Regex <a class="header-anchor" href="#regex" aria-label="Permalink to &quot;Regex&quot;">​</a></h1><h3 id="re模块" tabindex="-1">re模块 <a class="header-anchor" href="#re模块" aria-label="Permalink to &quot;re模块&quot;">​</a></h3><p>python中可以使用re.search()方法验证字符串是否符合正则表达式。</p><p>re.search()方法扫描整个字符串，并返回第一个成功的匹配。如果匹配失败，则返回None。</p><p>语法：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">re.search(pattern, string, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">flags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>参数：</p><ul><li>pattern : 正则中的模式字符串。</li><li>string : 要被查找替换的原始字符串。</li><li>flags : 标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pattern </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;^[0-9]+\\.[0-9]+\\.[0-9]+$&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re.search(pattern, version):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Incorrect version number!!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,9),l=[n];function h(p,r,o,k,d,c){return a(),i("div",null,l)}const _=s(t,[["render",h]]);export{E as __pageData,_ as default};
