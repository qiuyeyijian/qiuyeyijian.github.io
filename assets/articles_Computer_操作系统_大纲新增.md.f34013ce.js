import{_ as a,v as e,b as t,R as r}from"./chunks/framework.53249f15.js";const o="/assets/image-20211201223958227.cd6a2382.png",b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Computer/操作系统/大纲新增.md","filePath":"articles/Computer/操作系统/大纲新增.md"}'),s={name:"articles/Computer/操作系统/大纲新增.md"},p=r('<h2 id="调度器-调度程序" tabindex="-1">调度器/调度程序 <a class="header-anchor" href="#调度器-调度程序" aria-label="Permalink to &quot;调度器/调度程序&quot;">​</a></h2><p>创建进程，进程退出，进程运行阻塞，I/O中断发生</p><h2 id="上下文及其切换" tabindex="-1">上下文及其切换 <a class="header-anchor" href="#上下文及其切换" aria-label="Permalink to &quot;上下文及其切换&quot;">​</a></h2><p>上下文：地址空间、全局变量、打开文件。程序计数器PC，寄存器，堆栈，状态。</p><blockquote><p>进程切换导致的<strong>地址空间</strong>切换代价巨大：</p><p>1、保存/恢复页表寄存器</p><p>2、TLB全部失效</p><p>3、Cache全部失效，有可能要进行Cache写回</p><p>4、新进程初期缺页率高</p></blockquote><h2 id="多级队列调度算法" tabindex="-1">多级队列调度算法 <a class="header-anchor" href="#多级队列调度算法" aria-label="Permalink to &quot;多级队列调度算法&quot;">​</a></h2><h2 id="锁" tabindex="-1">锁 <a class="header-anchor" href="#锁" aria-label="Permalink to &quot;锁&quot;">​</a></h2><p>用于实现进程互斥</p><p>锁的主要缺点是忙等待，违反了<strong>让权等待</strong>原则。</p><p>优点：等待期间不用切换进程上下文，多处理器系统中，若上锁的时间较短，则等待的代价很低。</p><p>常用于多处理器系统，一个核忙等，其他核照常工作，并快速释放临界区。</p><p>不太适用于单处理器系统，忙等的过程中不可能解锁。</p><h2 id="条件变量" tabindex="-1">条件变量 <a class="header-anchor" href="#条件变量" aria-label="Permalink to &quot;条件变量&quot;">​</a></h2><p>用于进程同步。常和锁配合使用实现互斥。</p><p>可以简单理解为：等待队列</p><p>条件变量没有值，只有队列。注意与信号量区分。</p><h2 id="内存映射文件" tabindex="-1">内存映射文件 <a class="header-anchor" href="#内存映射文件" aria-label="Permalink to &quot;内存映射文件&quot;">​</a></h2><p><img src="'+o+'" alt="image-20211201223958227"></p><p>可以方便对大文件读写</p><h2 id="虚拟存储器性能的影响因素及改进方式" tabindex="-1">虚拟存储器性能的影响因素及改进方式 <a class="header-anchor" href="#虚拟存储器性能的影响因素及改进方式" aria-label="Permalink to &quot;虚拟存储器性能的影响因素及改进方式&quot;">​</a></h2><p>缺页率、TLB命中率、Cache命中率、页面置换速度</p><h2 id="固态硬盘" tabindex="-1">固态硬盘 <a class="header-anchor" href="#固态硬盘" aria-label="Permalink to &quot;固态硬盘&quot;">​</a></h2><p>读写以<strong>页</strong>为单位，以块为单位进行擦除。一个块包含若干页。</p>',23),i=[p];function h(n,l,c,d,u,m){return e(),t("div",null,i)}const q=a(s,[["render",h]]);export{b as __pageData,q as default};
