import{_ as s,o as a,c as e,R as t}from"./chunks/framework.UjU5Kp2a.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Database/MySQL/README.md","filePath":"articles/Database/MySQL/README.md"}'),p={name:"articles/Database/MySQL/README.md"},n=t(`<h2 id="mysql-数据库简单操作命令" tabindex="-1">MySQL 数据库简单操作命令 <a class="header-anchor" href="#mysql-数据库简单操作命令" aria-label="Permalink to &quot;MySQL 数据库简单操作命令&quot;">​</a></h2><h2 id="安装mysql" tabindex="-1">安装Mysql <a class="header-anchor" href="#安装mysql" aria-label="Permalink to &quot;安装Mysql&quot;">​</a></h2><ol><li><p>安装 MySQL：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo apt update</span></span>
<span class="line"><span>sudo apt install mysql-server</span></span></code></pre></div></li><li><p>配置 MySQL：</p><p>默认情况下，MySQL 只允许本地用户登录。要允许外部用户登录，请按照以下步骤编辑 MySQL 配置文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># bind-address = 127.0.0.1</span></span>
<span class="line"><span>mysqlx-bind-address     = 0.0.0.0</span></span></code></pre></div><p>这将允许 MySQL 接受来自任何 IP 地址的连接。</p></li><li><p>重启 MySQL 服务：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo systemctl restart mysql</span></span></code></pre></div></li><li><p>创建允许远程登录的用户：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo mysql</span></span></code></pre></div><p>进入 MySQL 命令行后，使用以下命令创建新用户并授予远程登录权限：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>CREATE USER &#39;burong&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;burong&#39;;</span></span>
<span class="line"><span>GRANT ALL PRIVILEGES ON *.* TO &#39;burong&#39;@&#39;%&#39;;</span></span>
<span class="line"><span>FLUSH PRIVILEGES;</span></span></code></pre></div><p>将 <code>username</code> 替换为您要创建的新用户的名称，将 <code>password</code> 替换为该用户的密码。<code>&#39;%&#39;</code> 表示该用户可以从任何 IP 地址连接到 MySQL。</p></li><li><p>确保防火墙允许 MySQL 的连接请求：</p><p>如果您的 Ubuntu 系统使用防火墙，请确保允许 MySQL 的连接请求。例如，如果您使用的是 UFW 防火墙，请使用以下命令允许 MySQL 的连接请求：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo ufw allow mysql</span></span></code></pre></div></li></ol><p>现在，您已经成功安装并配置了 MySQL，允许外部用户登录。其他用户现在可以使用以下命令从远程主机连接到 MySQL：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql -u username -p -h server_ip_address</span></span></code></pre></div><p>将 <code>username</code> 替换为您创建的新用户的名称，将 <code>server_ip_address</code> 替换为运行 MySQL 的服务器的 IP 地址。</p><h2 id="卸载mysql" tabindex="-1">卸载Mysql <a class="header-anchor" href="#卸载mysql" aria-label="Permalink to &quot;卸载Mysql&quot;">​</a></h2><p>在 Ubuntu 上卸载 MySQL 可以按照以下步骤操作：</p><ol><li><p>停止 MySQL 服务：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo systemctl stop mysql</span></span></code></pre></div></li><li><p>卸载 MySQL：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo apt-get remove --purge mysql-server mysql-client mysql-common</span></span>
<span class="line"><span>sudo apt-get autoremove</span></span>
<span class="line"><span>sudo apt-get autoclean</span></span></code></pre></div></li><li><p>删除 MySQL 数据库和配置文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo rm -rf /etc/mysql /var/lib/mysql*</span></span></code></pre></div></li><li><p>清理 MySQL 用户和组：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>sudo deluser mysql</span></span>
<span class="line"><span>sudo delgroup mysql</span></span>
<span class="line"><span>sudo delgroup mysql</span></span></code></pre></div></li></ol><p>现在，MySQL 已经从您的 Ubuntu 系统中完全卸载。如果您需要重新安装 MySQL，请参考 MySQL 官方文档或者 Ubuntu 的官方文档。</p><h3 id="mysql数据库的连接和导入表" tabindex="-1">MySQL数据库的连接和导入表 <a class="header-anchor" href="#mysql数据库的连接和导入表" aria-label="Permalink to &quot;MySQL数据库的连接和导入表&quot;">​</a></h3><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@host]# mysql -u root -p</span></span>
<span class="line"><span>Enter password:******</span></span></code></pre></div><p>source 命令导入数据库需要先登录到数库终端：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql&gt; create database abc;      # 创建数据库</span></span>
<span class="line"><span>mysql&gt; use abc;                  # 使用已创建的数据库 </span></span>
<span class="line"><span>mysql&gt; set names utf8;           # 设置编码</span></span>
<span class="line"><span>mysql&gt; source /home/abc/abc.sql  # 导入备份数据库</span></span></code></pre></div><h3 id="idea-连接mysql报错" tabindex="-1">idea 连接MySQL报错 <a class="header-anchor" href="#idea-连接mysql报错" aria-label="Permalink to &quot;idea 连接MySQL报错&quot;">​</a></h3><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Server returns invalid timezone. Go to &#39;Advanced&#39; tab and set &#39;serverTimezone&#39; property manually.</span></span></code></pre></div><p>只需要在连接语句后面加上<code>?serverTimezone=GMT</code></p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>jdbc:mysql://localhost:3306?serverTimezone=GMT</span></span></code></pre></div><h3 id="mysql-基本命令" tabindex="-1">Mysql 基本命令 <a class="header-anchor" href="#mysql-基本命令" aria-label="Permalink to &quot;Mysql 基本命令&quot;">​</a></h3><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>show databases;				//显示所有数据库</span></span>
<span class="line"><span>show create database mysql;				//显示创建名字为&quot;mysql&quot;的数据库的语句</span></span></code></pre></div><h3 id="mysql-数据库curd" tabindex="-1">Mysql 数据库CURD <a class="header-anchor" href="#mysql-数据库curd" aria-label="Permalink to &quot;Mysql 数据库CURD&quot;">​</a></h3><h4 id="_1-删除数据" tabindex="-1">1. 删除数据 <a class="header-anchor" href="#_1-删除数据" aria-label="Permalink to &quot;1. 删除数据&quot;">​</a></h4><p>delete 语句用于删除表中的数据, 基本用法为:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>delete from 表名称 where 删除条件;</span></span></code></pre></div><p>使用示例:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>delete from students where id=2;		//删除id为2的行</span></span>
<span class="line"><span>delete from students where age&lt;20;		//删除所有年龄小于21岁的数据</span></span>
<span class="line"><span>delete from students;					//删除表中的所有数据</span></span></code></pre></div><p>清空表信息的方式有两种 :</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>truncate table table_name;</span></span>
<span class="line"><span>delete * from table_name;</span></span></code></pre></div><p>truncate操作中的table可以省略，delete操作中的*可以省略</p><ul><li>truncate、delete 清空表数据的区别 :</li></ul><blockquote><ul><li>truncate 是整体删除 (速度较快)，delete是逐条删除 (速度较慢)</li><li>truncate 不写服务器 log，delete 写服务器 log，也就是 truncate 效率比 delete高的原因</li><li>truncate 不激活trigger (触发器)，但是会重置Identity (标识列、自增字段)，相当于自增列会被置为初始值，又重新从1开始记录，而不是接着原来的 ID数。而 delete 删除以后，identity 依旧是接着被删除的最近的那一条记录ID加1后进行记录。如果只需删除表中的部分记录，只能使用 DELETE语句配合 where条件</li></ul></blockquote><h4 id="_2-插入数据" tabindex="-1">2. 插入数据 <a class="header-anchor" href="#_2-插入数据" aria-label="Permalink to &quot;2. 插入数据&quot;">​</a></h4><p>insert 语句可以用来将一行或多行数据插到数据库表中, 使用的一般形式如下:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>insert [into] 表名 [(列名1, 列名2, 列名3, ...)] values (值1, 值2, 值3, ...);</span></span></code></pre></div><p>其中 [] 内的内容是可选的<code>推荐不要省去，这样可以避免很多错误</code></p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span> &quot;INSERT INTO books(title,author,publisher,price) VALUES (&#39;汇编语言&#39;, &#39;王爽&#39;, &#39;清华大学出版社&#39;, 39.00);&quot;</span></span></code></pre></div><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>insert into 表名(字段1, 字段2, 字段3) values(值1, 值2, 值3);</span></span></code></pre></div><h4 id="_3-更新数据" tabindex="-1">3. 更新数据 <a class="header-anchor" href="#_3-更新数据" aria-label="Permalink to &quot;3. 更新数据&quot;">​</a></h4><p>update 语句可用来修改表中的数据, 基本的使用形式为:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>update 表名称 set 字段=新值 where 更新条件;</span></span></code></pre></div><p>示例:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>update students set tel=default where id=5;		//将id为5的手机号改为默认的&quot;-&quot;</span></span>
<span class="line"><span>update students set age=age+1;				//将所有人的年龄增加1</span></span>
<span class="line"><span>update students set name=&quot;张伟鹏&quot;, age=19 where tel=&quot;13288097888&quot;;</span></span></code></pre></div><p>f</p><h4 id="_4-删除与添加字段" tabindex="-1">4. 删除与添加字段 <a class="header-anchor" href="#_4-删除与添加字段" aria-label="Permalink to &quot;4. 删除与添加字段&quot;">​</a></h4><p>添加列</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>alter table 表名 add 列名 列数据类型 [after 插入位置];				//添加列</span></span></code></pre></div><p>示例:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>alter table students add address char(60);		//在表的最后追加列 address </span></span>
<span class="line"><span>alter table students add birthday date after age;	//在名为 age 的列后插入列 birthday</span></span></code></pre></div><p>修改列</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>alter table 表名 change 列名称 列新名称 新数据类型;</span></span></code></pre></div><p>示例:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span> alter table students change tel telphone char(13) default &quot;-&quot;; //将表 tel 列改名为 telphone:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>alter table students change name name char(16) not null;	//将 name 列的数据类型改为 char(16):</span></span></code></pre></div><p>删除列</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>alter table 表名 drop 列名称;</span></span></code></pre></div><p>示例:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>alter table books drop id;			//删除books表中的id字段</span></span>
<span class="line"><span>alter table books add id int(20) primary key auto_increment first;	//添加id字段</span></span></code></pre></div><h4 id="_5-查询语句" tabindex="-1">5. 查询语句 <a class="header-anchor" href="#_5-查询语句" aria-label="Permalink to &quot;5. 查询语句&quot;">​</a></h4><p>按特定条件查询:</p><p>where 关键词用于指定查询条件, 用法形式为:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>select 列名称 from 表名称 where 条件</span></span></code></pre></div><p>以查询所有性别为女的信息为例, 输入查询语句:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>select * from students where sex=&quot;女&quot;;</span></span></code></pre></div><blockquote><p>where 子句不仅仅支持 &quot;where 列名 = 值&quot; 这种名等于值的查询形式, 对一般的比较运算的运算符都是支持的, 例如 =、&gt;、&lt;、&gt;=、&lt;、!= 以及一些扩展运算符 is [not] null、in、like 等等。 还可以对查询条件使用 or 和 and 进行组合查询, 以后还会学到更加高级的条件查询方式, 这里不再多做介绍。</p></blockquote><p>示例:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>select * from students where age &gt; 21;			//查询年龄在21岁以上的所有人信息: </span></span>
<span class="line"><span></span></span>
<span class="line"><span>select * from students where name like &quot;%王%&quot;;	//查询名字中带有 &quot;王&quot; 字的所有人信息: </span></span>
<span class="line"><span></span></span>
<span class="line"><span>select * from students where id&lt;5 and age&gt;20;	//查询id小于5且年龄大于20的所有人信息:</span></span></code></pre></div><h4 id="_6-数据库和表" tabindex="-1">6. 数据库和表 <a class="header-anchor" href="#_6-数据库和表" aria-label="Permalink to &quot;6. 数据库和表&quot;">​</a></h4><p><strong>重命名表</strong></p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>alter table 表名 rename 新表名;</span></span></code></pre></div><p>示例:</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>alter table students rename workmates;		//重命名 students 表为 workmates:</span></span></code></pre></div><p><strong>删除整张表</strong></p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>drop table 表名;</span></span></code></pre></div><p><strong>删除整个数据库</strong></p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>drop database 数据库名;</span></span></code></pre></div><h2 id="多表查询" tabindex="-1">多表查询 <a class="header-anchor" href="#多表查询" aria-label="Permalink to &quot;多表查询&quot;">​</a></h2><p><a href="https://blog.csdn.net/u012660464/article/details/113977173" target="_blank" rel="noreferrer">https://blog.csdn.net/u012660464/article/details/113977173</a></p>`,76),l=[n];function i(o,d,c,h,r,u){return a(),e("div",null,l)}const m=s(p,[["render",i]]);export{b as __pageData,m as default};
