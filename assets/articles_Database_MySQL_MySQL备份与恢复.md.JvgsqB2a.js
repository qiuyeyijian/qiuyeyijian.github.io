import{_ as s,c as a,o as n,U as p}from"./chunks/framework.isgf4Vyz.js";const g=JSON.parse('{"title":"MySQL 备份与恢复","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Database/MySQL/MySQL备份与恢复.md","filePath":"articles/Database/MySQL/MySQL备份与恢复.md"}'),e={name:"articles/Database/MySQL/MySQL备份与恢复.md"},t=p(`<h1 id="mysql-备份与恢复" tabindex="-1">MySQL 备份与恢复 <a class="header-anchor" href="#mysql-备份与恢复" aria-label="Permalink to &quot;MySQL 备份与恢复&quot;">​</a></h1><h4 id="mysqldump工具备份" tabindex="-1">mysqldump工具备份 <a class="header-anchor" href="#mysqldump工具备份" aria-label="Permalink to &quot;mysqldump工具备份&quot;">​</a></h4><p>备份整个数据库</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysqldump -u root -h host -p dbname &gt; backdb.sql</span></span></code></pre></div><p>备份数据库中的某个表</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysqldump -u root -h host -p dbname tbname1, tbname2 &gt; backdb.sql</span></span></code></pre></div><p>备份多个数据库</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysqldump -u root -h host -p --databases dbname1, dbname2 &gt; backdb.sql</span></span></code></pre></div><p>备份系统中所有数据库</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysqldump -u root -h host -p --all-databases &gt; backdb.sql</span></span></code></pre></div><h4 id="直接复制整个数据库目录-对于innodb存储引擎不适用-备份" tabindex="-1">直接复制整个数据库目录(对于InnoDB存储引擎不适用)备份 <a class="header-anchor" href="#直接复制整个数据库目录-对于innodb存储引擎不适用-备份" aria-label="Permalink to &quot;直接复制整个数据库目录(对于InnoDB存储引擎不适用)备份&quot;">​</a></h4><p>windowns: installpath/mysql/data</p><p>linux: /var/lib/mysql</p><p>在复制前需要先执行如下命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>MYSQL&gt; LOCK TABLES;</span></span>
<span class="line"><span># 在复制过程中允许客户继续查询表，</span></span>
<span class="line"><span>MYSQL&gt; FLUSH TABLES;</span></span>
<span class="line"><span># 将激活的索引页写入硬盘。</span></span></code></pre></div><h4 id="mysqlhotcopy工具备份" tabindex="-1">mysqlhotcopy工具备份 <a class="header-anchor" href="#mysqlhotcopy工具备份" aria-label="Permalink to &quot;mysqlhotcopy工具备份&quot;">​</a></h4><p>备份数据库或表最快的途径，只能运行在数据库目录所在的机器上，并且只能备份MyISAM类型的表。</p><p>要使用该备份方法必须可以访问备份的表文件。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysqlhotcopy -u root -p dbname /path/to/new_directory;</span></span>
<span class="line"><span>#将数据库复制到new_directory目录。</span></span></code></pre></div><h4 id="mysql命令导入sql文件还原" tabindex="-1">mysql命令导入sql文件还原 <a class="header-anchor" href="#mysql命令导入sql文件还原" aria-label="Permalink to &quot;mysql命令导入sql文件还原&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysql -u root -p [dbname] &lt; backup.sql</span></span>
<span class="line"><span># 执行前需要先创建dbname数据库，如果backup.sql是mysqldump创建的备份文件则执行是不需要dbname。</span></span>
<span class="line"><span>MYSQL&gt; source backup.sql;</span></span>
<span class="line"><span># 执行source命令前需要先选择数据库。</span></span></code></pre></div><h4 id="直接复制数据库目录还原" tabindex="-1">直接复制数据库目录还原 <a class="header-anchor" href="#直接复制数据库目录还原" aria-label="Permalink to &quot;直接复制数据库目录还原&quot;">​</a></h4><p><strong>注： 该方式必须确保原数据库和待还原的数据库主版本号一致，并且只适用于MyISAM引擎的表。</strong></p><ol><li>关闭mysql服务。</li><li>将备份的文件或目录覆盖mysql的data目录。</li><li>启动mysql服务。</li><li>对于linux系统，复制完文件后需要将文件的用户和组更改为mysql运行的用户和组。</li></ol><h4 id="mysqlhotcopy快速恢复" tabindex="-1">mysqlhotcopy快速恢复 <a class="header-anchor" href="#mysqlhotcopy快速恢复" aria-label="Permalink to &quot;mysqlhotcopy快速恢复&quot;">​</a></h4><p>停止mysql服务，将备份数据库文件复制到存放数据的位置（mysql的data文件夹），重先启动mysql服务即可(可能需要指定数据库文件的所有者)。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; cp -R /usr/backup/test /usr/local/mysql/data</span></span>
<span class="line"><span># 如果恢复的数据库已经存在，则使用DROP语句删除已经存在的数据库之后，恢复才能成功，还需要保证数据库版本兼容。</span></span></code></pre></div><h4 id="相同版本数据库之间迁移" tabindex="-1">相同版本数据库之间迁移 <a class="header-anchor" href="#相同版本数据库之间迁移" aria-label="Permalink to &quot;相同版本数据库之间迁移&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysqldump -h www.abc.com -uroot -p password dbname | </span></span>
<span class="line"><span>$&gt; mysqldump -h www.bcd.com -uroot -p password</span></span>
<span class="line"><span># 将服务器www.abc.com的数据库dbname迁移到服务器www.bcd.com的相同版本数据库上。</span></span></code></pre></div><h4 id="不同版本的mysql数据库之间的迁移" tabindex="-1">不同版本的mysql数据库之间的迁移 <a class="header-anchor" href="#不同版本的mysql数据库之间的迁移" aria-label="Permalink to &quot;不同版本的mysql数据库之间的迁移&quot;">​</a></h4><p>备份原数据库。</p><p>卸载原数据库。</p><p>安装新数据库。</p><p>在新数据库中还原备份的数据库数据。</p><p>数据库用户访问信息需要备份mysql数据库。</p><p>默认字符集问题，MySQL4.x中使用latin1作为默认字符集，mysql5.x使用utf8作为默认字符集。如果有中文数据需要对默认字符集进行更改。</p><p>不同数据库之间的迁移</p><p>MyODBC工具实现MySQL和SQL Server之间的迁移。</p><p>MySQL Migration Toolkit工具。</p><h4 id="表的导出和导入" tabindex="-1">表的导出和导入 <a class="header-anchor" href="#表的导出和导入" aria-label="Permalink to &quot;表的导出和导入&quot;">​</a></h4><p>SELECT ...... INTO OUTFILE 导出文本文件,该方法只能导出到数据库服务器上，并且导出文件不能已存在。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>MYSQL&gt; SELECT ...... INTO OUTFILE filename [OPTIONS]</span></span>
<span class="line"><span>MYSQL&gt; SELECT * FROM test.person INTO OUTFILE &quot;C:\\person0.txt&quot;;</span></span>
<span class="line"><span># 将表person里的数据导入为文本文件person0.txt。</span></span></code></pre></div><p>mysqldump文件导出文本文件(和INTO OUTFILE不一样的是该方法所有的选项不需要添加引号)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysqldump -T path -u root -p dbname [tables] [OPTIONS]</span></span>
<span class="line"><span># -T参数表明导出文本文件。path导出数据的目录。</span></span>
<span class="line"><span>$&gt; mysqldump -T C:\\test person -u root -p</span></span>
<span class="line"><span># 将test表中的person表导出到文本文件。执行成功后test目录下会有两个文件，person.sql和person.txt</span></span></code></pre></div><p>mysql命令导出文本文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>MYSQL&gt; mysql -u root -p --execute=&quot;SELECT * FROM person;&quot; test &gt; C:\\person3.txt;</span></span>
<span class="line"><span># 将test数据库中的person表数据导出到person3.txt文本文件中。--vartical参数可以将一行分为多行显示。</span></span>
<span class="line"><span>MYSQL&gt; mysql -u root -p --vartical --execute=&quot;SELECT * FROM person;&quot; test &gt; C:\\person3.txt;</span></span>
<span class="line"><span># --html将表导出为html文件，--xml文件将表导出为xml文件</span></span></code></pre></div><p>LOAD DATA INFILE导入文本文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>MYSQL&gt; LOAD DATA INFILE &#39;filename.txt&#39; INTO TABLE tablename [OPTIONS] [IGNORE number LINES];</span></span>
<span class="line"><span># [IGNORE number LINES]表示忽略行数</span></span>
<span class="line"><span>MYSQL&gt; LOAD DATA INFILE &#39;C:\\person0.txt&#39; INTO TABLE test.person;</span></span></code></pre></div><p>mysqlimport导入文本文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysqlimport -u root -p dbname filename.txt [OPSTONS]</span></span>
<span class="line"><span># 导入的表名有文件名决定，导入数据之前表必须存在</span></span>
<span class="line"><span>$&gt; mysqlimport -uroot -p test C:\\backup\\person.txt</span></span>
<span class="line"><span># 将数据导入到test数据库的person表中。</span></span></code></pre></div><h4 id="使用mysqlbinlog恢复数据" tabindex="-1">使用mysqlbinlog恢复数据 <a class="header-anchor" href="#使用mysqlbinlog恢复数据" aria-label="Permalink to &quot;使用mysqlbinlog恢复数据&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>$&gt; mysqlbinlog [option] filename | mysql -u user -p password</span></span>
<span class="line"><span># filename为二进制日志文件，</span></span>
<span class="line"><span>$&gt; mysqlbinlog --stop-date=&quot;2013-03-30 15:27:47&quot; D:\\MySQL\\log\\binlog\\binlog.000008 | mysql -u root -p password</span></span>
<span class="line"><span># 根据日志文件binlog.000008将数据恢复到2013-03-30 15:27:47以前的操作。</span></span></code></pre></div><h4 id="启动二进制日志" tabindex="-1">启动二进制日志 <a class="header-anchor" href="#启动二进制日志" aria-label="Permalink to &quot;启动二进制日志&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>log-bin = path/filename	#日志文件存储目录和文件名</span></span>
<span class="line"><span>expire_log_days = 10	#日志自动删除时间</span></span>
<span class="line"><span>max_binlog_size = 100M	# 日志文件最大大小</span></span></code></pre></div><h4 id="查看二进制日志" tabindex="-1">查看二进制日志 <a class="header-anchor" href="#查看二进制日志" aria-label="Permalink to &quot;查看二进制日志&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>MYSQL&gt; SHOW VARIABLES LIKE &#39;log_%&#39;;</span></span>
<span class="line"><span>MYSQL&gt; SHOW BINARY LOGS;</span></span>
<span class="line"><span>$&gt; mysqlbinlog filename</span></span>
<span class="line"><span># filename为二进制日志文件名。</span></span></code></pre></div><h4 id="删除二进制日志" tabindex="-1">删除二进制日志 <a class="header-anchor" href="#删除二进制日志" aria-label="Permalink to &quot;删除二进制日志&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>MYSQL&gt; RESET MASTER; #删除所有二进制日志</span></span>
<span class="line"><span>MYSQL&gt; PURGE {MASTER | BINARY} LOGS TO &#39;log_name&#39;;	#删除文件编号小于log_name编号的文件</span></span>
<span class="line"><span>MYSQL&gt; PURGE {MASTER | BINARY} LOGS BEFORE &#39;date&#39;;	#删除指定日期以前的文件</span></span></code></pre></div><h4 id="暂时停止二进制日志-不需要重启mysql服务" tabindex="-1">暂时停止二进制日志（不需要重启mysql服务） <a class="header-anchor" href="#暂时停止二进制日志-不需要重启mysql服务" aria-label="Permalink to &quot;暂时停止二进制日志（不需要重启mysql服务）&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>MYSQL&gt; SET sql_log_bin = {0|1}	#暂停或启动二进制日志。</span></span></code></pre></div>`,60),l=[t];function i(o,c,d,h,r,u){return n(),a("div",null,l)}const b=s(e,[["render",i]]);export{g as __pageData,b as default};
