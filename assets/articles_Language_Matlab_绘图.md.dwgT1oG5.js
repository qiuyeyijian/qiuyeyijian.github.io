import{_ as s,o as i,c as a,R as n}from"./chunks/framework.UjU5Kp2a.js";const o=JSON.parse('{"title":"绘图","description":"","frontmatter":{},"headers":[],"relativePath":"articles/Language/Matlab/绘图.md","filePath":"articles/Language/Matlab/绘图.md"}'),l={name:"articles/Language/Matlab/绘图.md"},h=n(`<h1 id="绘图" tabindex="-1">绘图 <a class="header-anchor" href="#绘图" aria-label="Permalink to &quot;绘图&quot;">​</a></h1><h2 id="线图" tabindex="-1">线图 <a class="header-anchor" href="#线图" aria-label="Permalink to &quot;线图&quot;">​</a></h2><h3 id="二维线图" tabindex="-1">二维线图 <a class="header-anchor" href="#二维线图" aria-label="Permalink to &quot;二维线图&quot;">​</a></h3><p>使用 <code>plot</code> 函数创建二维线图。例如，绘制从 0 到 2<em>π</em> 之间的正弦函数值。</p><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 生成线性等间距点，0-2π，生成1000个</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x = linspace(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y = sin(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plot(x, y);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 添加坐标轴和标题</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xlabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ylabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sin(x)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">title(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sin(x)的函数图像&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="绘制多个线条" tabindex="-1">绘制多个线条 <a class="header-anchor" href="#绘制多个线条" aria-label="Permalink to &quot;绘制多个线条&quot;">​</a></h4><p>默认情况下，MATLAB 会在执行每个绘图命令之前清空图窗。使用 <code>figure</code> 命令打开一个新的图窗窗口。可以使用 <code>hold on</code> 命令绘制多个线条。在使用 <code>hold off</code> 或关闭窗口之前，当前图窗窗口中会显示所有绘图。</p><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 生成线性等间距点，0-2π，生成1000个</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x = linspace(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 绘制第一个图形sinx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y1 = sin(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plot(x, y1);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 使用hold on 保证第一个图像窗口不会被清除掉</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hold</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 绘制第二个图形cosx</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y2 = cos(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plot(x, y2);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hold</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span></span></code></pre></div><h4 id="更改线条外观" tabindex="-1">更改线条外观 <a class="header-anchor" href="#更改线条外观" aria-label="Permalink to &quot;更改线条外观&quot;">​</a></h4><p>通过在调用 plot 函数时包含可选的线条设定，可以更改线条颜色、线型或添加标记。例如：</p><ul><li><p><code>:</code> 绘制点线。</p></li><li><p><code>r:</code>绘制红色点线。</p></li><li><p><code>r:*</code> 绘制带有星号标记的红色点线。</p></li><li><p><code>*</code> 绘制不带线条的星号标记。</p></li></ul><p>更多的参数请参考官方<code>plot</code>函数页</p><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x = linspace(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y = sin(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plot(x,y,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hold</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y2 = cos(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plot(x,y2,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;r:*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hold</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span></span></code></pre></div><h4 id="更改线条对象的属性" tabindex="-1">更改线条对象的属性 <a class="header-anchor" href="#更改线条对象的属性" aria-label="Permalink to &quot;更改线条对象的属性&quot;">​</a></h4><p>通过更改用来创建绘图的 <code>Line</code> 对象的属性，还可以自定义绘图的外观。</p><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x = linspace(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y = sin(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ln = plot(x, y);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 线宽 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ln.LineWidth = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 线条样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ln.LineStyle = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 线条颜色RGB</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ln.Color = [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 线条标记圆形</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ln.Marker = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;o&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 圆形标记边缘颜色蓝色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ln.MarkerEdgeColor = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;b&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>更多设置请访问MATLAB官方文档的Line属性页</p><h4 id="为图添加标题和轴标签" tabindex="-1">为图添加标题和轴标签 <a class="header-anchor" href="#为图添加标题和轴标签" aria-label="Permalink to &quot;为图添加标题和轴标签&quot;">​</a></h4><p>MATLAB是支持LaTeX标记的，所以在命名标题的时候，如果遇到数学符号，希腊字母，可以使用LaTeX。</p><p>使用 legend 函数向图中添加标识每个数据集的图例。<strong>按照绘制线条的顺序指定图例说明</strong>。（可选）使用八个基本或斜角方位之一指定图例位置，在本例中为 &#39;southwest&#39;。</p><p><code>Axes</code> 对象具有可用来自定义坐标区外观的属性。例如，<code>FontSize</code> 属性控制标题、标签和图例的字体大小。</p><p>使用 <code>gca</code> 函数访问当前 <code>Axes</code> 对象。然后使用圆点表示法设置 <code>FontSize</code> 属性。</p><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 生成线性等间距点，-2π-2π，生成1000个</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x = linspace(-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y1 = sin(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y2 = cos(x);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plot(x, y1, x, y2);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">title(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Line Plot of Sine and Cosine Between -2\\pi and 2\\pi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">legend({</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;y = sin(x)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;y = cos(x)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Location&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;southwest&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax = gca;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax.FontSize = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="更改坐标轴范围" tabindex="-1">更改坐标轴范围 <a class="header-anchor" href="#更改坐标轴范围" aria-label="Permalink to &quot;更改坐标轴范围&quot;">​</a></h4><p>创建一个线图。使用 <code>xlim</code> 和 <code>ylim</code> 函数指定坐标轴范围。对于三维绘图，请使用 <code>zlim</code> 函数。将 <code>[min max]</code> 形式的二元素向量传递给函数。</p><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x = linspace(-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y = sin(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">./</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exp(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plot(x, y);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xlim([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ylim([-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><h4 id="使用半自动坐标轴范围" tabindex="-1">使用半自动坐标轴范围 <a class="header-anchor" href="#使用半自动坐标轴范围" aria-label="Permalink to &quot;使用半自动坐标轴范围&quot;">​</a></h4><p>将 <em>x</em> 轴范围最大值设为 0，<em>y</em> 轴范围最小值设为 -1。其他范围则由 MATLAB 选择。对于自动计算的最小值或最小值范围，分别使用 <code>-inf</code> 或 <code>inf</code> 来表示。</p><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[x, y, z] = peaks;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">surf(x, y, z);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xlabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x-axis&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ylabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;y-axis&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xlim([-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ylim([-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><h4 id="还原为默认范围" tabindex="-1">还原为默认范围 <a class="header-anchor" href="#还原为默认范围" aria-label="Permalink to &quot;还原为默认范围&quot;">​</a></h4><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[x, y, z] = peaks;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh(x, y, z);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xlabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;x-axis&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ylabel(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;y-axis&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xlim([-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ylim([-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zlim([-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 还原默认范围</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xlim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ylim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zlim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auto</span></span></code></pre></div><h4 id="反转坐标轴的方向" tabindex="-1">反转坐标轴的方向 <a class="header-anchor" href="#反转坐标轴的方向" aria-label="Permalink to &quot;反转坐标轴的方向&quot;">​</a></h4><p>通过设置 <code>Axes</code> 对象的 <code>XDir</code> 和 <code>YDir</code> 属性，可控制 <em>x</em> 轴和 <em>y</em> 轴值递增的方向。这些属性可以设置为 <code>&#39;reverse&#39;</code>或 <code>&#39;normal&#39;</code>（默认值）。使用 <code>gca</code> 命令可访问 <code>Axes</code> 对象。</p><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stem(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax = gca;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax.XDir = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;reverse&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax.YDir = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;reverse&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h4 id="显示通过原点的轴线" tabindex="-1">显示通过原点的轴线 <a class="header-anchor" href="#显示通过原点的轴线" aria-label="Permalink to &quot;显示通过原点的轴线&quot;">​</a></h4><p>默认情况下，<em>x</em> 轴和 <em>y</em> 轴沿坐标区的外边界显示。通过设置 <code>Axes</code> 对象的 <code>XAxisLocation</code> 和 <code>YAxisLocation</code> 属性来更改轴线位置，以使轴线在原点 <code>(0,0)</code> 处交叉。将 <code>XAxisLocation</code> 设置为 <code>&#39;top&#39;</code>、<code>&#39;bottom&#39;</code> 或 <code>&#39;origin&#39;</code>。将 <code>YAxisLocation</code> 设置为 <code>&#39;left&#39;</code>、<code>&#39;right&#39;</code> 或 <code>&#39;origin&#39;</code>。这些属性仅适用于二维视图中的坐标区。</p><div class="language-matlab vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x = linspace(-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y = sin(x);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plot(x, y);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax = gca;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 使得原点处于图像中间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax.XAxisLocation = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;origin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax.YAxisLocation = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;origin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">% 删除坐标外边框</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">box</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span></span></code></pre></div><h3 id="指定坐标轴刻度值和标签" tabindex="-1">指定坐标轴刻度值和标签 <a class="header-anchor" href="#指定坐标轴刻度值和标签" aria-label="Permalink to &quot;指定坐标轴刻度值和标签&quot;">​</a></h3>`,38),p=[h];function k(t,e,E,d,r,c){return i(),a("div",null,p)}const y=s(l,[["render",k]]);export{o as __pageData,y as default};
