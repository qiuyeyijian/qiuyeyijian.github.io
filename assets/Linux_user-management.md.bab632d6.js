import{_ as t,c as s,o as a,a as d}from"./app.5e73ec67.js";const g=JSON.parse('{"title":"用户管理","description":"","frontmatter":{},"headers":[{"level":2,"title":"用户身份与能力","slug":"用户身份与能力","link":"#用户身份与能力","children":[{"level":3,"title":"id","slug":"id","link":"#id","children":[]},{"level":3,"title":"useradd","slug":"useradd","link":"#useradd","children":[]},{"level":3,"title":"groupadd","slug":"groupadd","link":"#groupadd","children":[]},{"level":3,"title":"usermod","slug":"usermod","link":"#usermod","children":[]},{"level":3,"title":"passwd","slug":"passwd","link":"#passwd","children":[]},{"level":3,"title":"userdel","slug":"userdel","link":"#userdel","children":[]}]}],"relativePath":"Linux/user-management.md"}'),e={name:"Linux/user-management.md"},n=d(`<h1 id="用户管理" tabindex="-1">用户管理 <a class="header-anchor" href="#用户管理" aria-hidden="true">#</a></h1><h2 id="用户身份与能力" tabindex="-1">用户身份与能力 <a class="header-anchor" href="#用户身份与能力" aria-hidden="true">#</a></h2><p>Linux系统的管理员之所以是root，并不是因为它的名字叫root，而是因为该用户的身份号码即UID（User IDentification）的数值为0。在Linux系统中，UID就像我们的身份证号码一样具有唯一性，因此可通过用户的UID值来判断用户身份。</p><blockquote><p><strong>管理员UID为0</strong>：系统的管理员用户。</p><p><strong>系统用户UID为1～999</strong>：Linux系统为了避免因某个服务程序出现漏洞而被黑客提权至整台服务器，默认服务程序会由独立的系统用户负责运行，进而有效控制被破坏范围。</p><p><strong>普通用户UID从1000开始</strong>：是由管理员创建的用于日常工作的用户。</p></blockquote><p>为了方便管理属于同一组的用户，Linux系统中还引入了用户组的概念。通过使用用户组号码（GID，Group IDentification），可以把多个用户加入到同一个组中，从而方便为组中的用户统一规划权限或指定任务。</p><p>另外，在Linux系统中创建每个用户时，将自动创建一个与其同名的基本用户组，而且这个基本用户组只有该用户一个人。如果该用户以后被归纳到其他用户组，则这个其他用户组称之为扩展用户组。一个用户只有一个基本用户组，但是可以有多个扩展用户组，从而满足日常的工作需要。</p><blockquote><p>基本用户组就像是原生家庭，是在创建账号（出生）时就自动生成的；而扩展用户组则像工作单位，为了完成工作，需要加入到各个不同的群体中，这是需要手动添加的。</p></blockquote><h3 id="id" tabindex="-1">id <a class="header-anchor" href="#id" aria-hidden="true">#</a></h3><p>id命令用于显示用户的详细信息，语法格式为“id用户名”。它能够简单轻松地查看用户的基本信息，例如用户ID、基本组与扩展组GID，以便于我们判别某个用户是否已经存在，以及查看相关信息。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">id r</span></span>
<span class="line"></span></code></pre></div><h3 id="useradd" tabindex="-1">useradd <a class="header-anchor" href="#useradd" aria-hidden="true">#</a></h3><p>useradd命令用于创建新的用户账户，语法格式为“useradd [参数] 用户名”。</p><p>可以使用useradd命令创建用户账户。使用该命令创建用户账户时，默认的用户家目录会被存放在/home目录中，默认的<a href="https://www.linuxcool.com/" target="_blank" rel="noreferrer">Shell</a>解释器为/bin/bash，而且默认会创建一个与该用户同名的基本用户组。</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-d</td><td>指定用户的家目录（默认为/home/username）</td></tr><tr><td>-e</td><td>账户的到期时间，格式为YYYY-MM-DD.</td></tr><tr><td>-u</td><td>指定该用户的默认UID</td></tr><tr><td>-g</td><td>指定一个初始的用户基本组（必须已存在）</td></tr><tr><td>-G</td><td>指定一个或多个扩展用户组</td></tr><tr><td>-N</td><td>不创建与用户同名的基本用户组</td></tr><tr><td>-s</td><td>指定该用户的默认Shell解释器</td></tr></tbody></table><p>创建一个普通用户并指定家目录的路径、用户的UID以及Shell解释器。在下面的命令中，请注意/sbin/nologin，它是终端解释器中的一员，与Bash解释器有着天壤之别。一旦用户的解释器被设置为nologin，则代表该用户不能登录到系统中。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">useradd -d /home/test -u 8888 -s /sbin/nologin </span><span style="color:#82AAFF;">test</span></span>
<span class="line"></span></code></pre></div><h3 id="groupadd" tabindex="-1">groupadd <a class="header-anchor" href="#groupadd" aria-hidden="true">#</a></h3><p>groupadd命令用于创建新的用户组，语法格式为“groupadd [参数] 群组名”。</p><p>为了能够更加高效地指派系统中各个用户的权限，在工作中常常会把几个用户加入到同一个组里面，这样便可以针对一类用户统一安排权限。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">groupadd </span><span style="color:#82AAFF;">test</span></span>
<span class="line"></span></code></pre></div><h3 id="usermod" tabindex="-1">usermod <a class="header-anchor" href="#usermod" aria-hidden="true">#</a></h3><p>usermod命令用于修改用户的属性，英文全称为“user modify”，语法格式为“usermod [参数] 用户名”。</p><p>前文曾反复强调，Linux系统中的一切都是文件，因此在系统中创建用户也就是修改配置文件的过程。用户的信息保存在/etc/passwd文件中，可以直接用文本编辑器来修改其中的用户参数项目，也可以用usermod命令修改已经创建的用户信息，比如用户的UID、基本/扩展用户组、默认终端等。</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-c</td><td>填写用户账户的备注信息</td></tr><tr><td>-d -m</td><td>参数-m与参数-d连用，可重新指定用户的家目录并自动把旧的数据转移过去</td></tr><tr><td>-e</td><td>账户的到期时间，格式为YYYY-MM-DD</td></tr><tr><td>-g</td><td>变更所属用户组</td></tr><tr><td>-G</td><td>变更扩展用户组</td></tr><tr><td>-L</td><td>锁定用户禁止其登录系统</td></tr><tr><td>-U</td><td>解锁用户，允许其登录系统</td></tr><tr><td>-s</td><td>变更默认终端</td></tr><tr><td>-u</td><td>修改用户的UID</td></tr></tbody></table><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">usermod -G root qiuyeyijian		</span><span style="color:#676E95;"># 将用户加入root组中</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">usermod -u 8888 qiuyeyijian		</span><span style="color:#676E95;"># 修改用户的uid号</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">usermod -s /sbin/nologin qiuyeyijian	</span><span style="color:#676E95;"># 不允许用户登录</span></span>
<span class="line"></span></code></pre></div><p>将用户的终端设置成/sbin/nologin后用户马上就不能登录了（切换身份也不行），但这个用户依然可以被某个服务所调用，管理某个具体的服务。这样的好处是当黑客通过这个服务入侵成功后，破坏的范围也仅仅局限于这个特定的服务，而不能使用这个用户身份登录到整台服务器上，从而尽可能地把损失降至最小化。</p><h3 id="passwd" tabindex="-1">passwd <a class="header-anchor" href="#passwd" aria-hidden="true">#</a></h3><p>passwd命令用于修改用户的密码、过期时间等信息，英文全称为“password”，语法格式为“passwd [参数] 用户名”。</p><p>普通用户只能使用passwd命令修改自己的系统密码，而root管理员则有权限修改其他所有人的密码。更酷的是，root管理员在Linux系统中修改自己或他人的密码时不需要验证旧密码，这一点特别方便。既然root管理员能够修改其他用户的密码，就表示其完全拥有该用户的管理权限。</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-l</td><td>锁定用户，禁止其登录</td></tr><tr><td>-u</td><td>解除锁定，允许用户登录</td></tr><tr><td>--stdin</td><td>允许通过标准输入修改用户密码，如echo &quot;NewPassWord&quot; | passwd --stdin Username</td></tr><tr><td>-d</td><td>使该用户可用空密码登录系统</td></tr><tr><td>-e</td><td>强制用户在下次登录时修改密码</td></tr><tr><td>-S</td><td>显示用户的密码是否被锁定，以及密码所采用的加密算法名称</td></tr></tbody></table><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">passwd		</span><span style="color:#676E95;"># 修改自己密码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">passwd qiuyeyijian		</span><span style="color:#676E95;"># 修改其他用户密码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">passwd -l qiuyeyijian	</span><span style="color:#676E95;"># 锁定用户</span></span>
<span class="line"></span></code></pre></div><h3 id="userdel" tabindex="-1">userdel <a class="header-anchor" href="#userdel" aria-hidden="true">#</a></h3><p>userdel命令用于删除已有的用户账户，英文全称为“user delete”，语法格式为“userdel [参数] 用户名”。</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-f</td><td>强制删除用户</td></tr><tr><td>-r</td><td>同时删除用户及用户家目录</td></tr></tbody></table><p>在删除一个用户时，一般会建议保留他的家目录数据，以免有重要的数据被误删除。所以在使用userdel命令时可以不加参数，写清要删除的用户名称就行：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">userdel qiuyeyijian</span></span>
<span class="line"></span></code></pre></div>`,36),r=[n];function l(o,p,i,c,u,h){return a(),s("div",null,r)}const y=t(e,[["render",l]]);export{g as __pageData,y as default};
